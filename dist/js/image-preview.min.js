function createDOM(e,t,i,a){const n=e.closest("[data-upload-item]").querySelector("[data-preview]");n.innerHTML="",n.appendChild(a.imgElement);const r=e.dataset.group,o=e.dataset.index;if(t.compress){const n=i.name.substring(i.name.lastIndexOf(".")).replace("."),s=i.name.replace(`.${n}`,"");a.originalCanvas.toBlob((function(n){const l=new File([n],`${s}`,{type:i.type});uploadImage[`${r}`][o]={file:l,info:a},t.on.changeAfter&&"function"==typeof t.on.changeAfter&&t.on.changeAfter(e,a)}),i.type,t.compress)}else uploadImage[`${r}`][o]={file:i,info:a},t.on.changeAfter&&"function"==typeof t.on.changeAfter&&t.on.changeAfter(e,a)}function createCanvas(e,t,i,a){const n=document.createElement("canvas"),r=n.getContext("2d"),o=t.width,s=t.height/o*100,l=a/i*100;let c=0,p=0;switch(n.width=i,n.height=a,e.previewSize){case"contain":s<l?(c=n.width,p=i*s/100):s>l?(c=a/s*100,p=n.height):(c=n.width,p=n.height);break;case"cover":s<l?(c=a/s*100,p=n.height):s>l?(c=n.width,p=i*s/100):s===l&&(c=n.width,p=n.height)}const u=.5*(n.width-c),d=.5*(n.height-p);return r.drawImage(t,u,d,c,p),n}function convertImg(e,t){return new Promise(((i,a)=>{if(t){const a=new Image;a.src=t,a.classList.add(e.previewSize),a.onload=()=>{let t={imgElement:a,originalCanvas:createCanvas(e,a,a.width,a.height),info:{originalWidth:a.width,originalHeight:a.height,ratio:a.height/a.width*100+"%"}};i(t)}}else i()}))}function formatFloat(e,t){const i=Math.pow(10,t);return Math.round(e*i)/i}function checkSize(e,t){return`${formatFloat(e.size/1024/1024,2)}`<=t}function readFileHandler(e,t,i){if(e.target.files.length<=0)return;const a=e.target.files[0],n=t.closest("[data-upload-item]");let r=new FileReader;r.onload=e=>{const r="image"===a.type.split("/")[0]?e.target.result:null;if(i.sizeLimit&&!checkSize(a,i.sizeLimit))return t.value="",n.classList.add("over-limit"),void(i.on.overLimit&&"function"==typeof i.on.overLimit&&i.on.overLimit(t));n.classList.remove("over-limit"),n.classList.add("uploaded"),convertImg(i,r).then((e=>{createDOM(t,i,a,e)}))},r.readAsDataURL(a)}export class ImagePreview{constructor(e,t){this.el=e,this.params={on:{changeAfter:null,overLimit:null},group:"group",sizeLimit:2,previewSize:"cover",compress:.8},Object.assign(this.params,t),this.init()}init(){const self=this,inputs=document.querySelectorAll(`${self.el}:not(.preview-active)`);inputs.length<=0||(window.uploadImage={},inputs.forEach(((input,index)=>{input.classList.add("preview-active");const params={group:input.dataset.group||self.params.group,sizeLimit:parseInt(input.dataset.limit)||self.params.sizeLimit,previewSize:input.dataset.previewSize||self.params.previewSize,compress:input.dataset.compress||self.params.compress,on:{changeAfter:input.dataset.changeAfter?function(el,res){eval(input.dataset.changeAfter+"(el,res);")}:self.params.on.changeAfter,overLimit:input.dataset.overLimit?function(el){eval(input.dataset.overLimit+"(el);")}:self.params.on.overLimit}};void 0===uploadImage[`${params.group}`]&&(uploadImage[`${params.group}`]=[]),input.dataset.group||(input.dataset.group=params.group),input.dataset.index=document.querySelectorAll(`[data-group="${params.group}"]`).length-1,input.addEventListener("change",(function(e){readFileHandler(e,input,params)}))})))}}
//# sourceMappingURL=image-preview.min.js.map